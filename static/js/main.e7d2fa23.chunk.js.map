{"version":3,"sources":["fonts/VarelaRound-Regular.ttf","index.js"],"names":["Square","props","className","id","index","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","draw","checkDraw","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","document","getElementById","style","background","color","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7d2fa23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/VarelaRound-Regular.411276fd.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './fonts/VarelaRound-Regular.ttf';\r\n\r\n   function Square(props) {\r\n      return (\r\n        <button className=\"square\" id={'square-'+props.index} onClick = {props.onClick}>\r\n          {props.value}\r\n        </button>\r\n      );\r\n    }\r\n\r\n  \r\n  class Board extends React.Component {\r\n    renderSquare(i) {\r\n      return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} index={i} />;\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n        <div className=\"board\">\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n      };\r\n    }\r\n    \r\n    handleClick(i) {\r\n      const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext?'X':'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext,      \r\n      });\r\n    }\r\n\r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n      const draw = checkDraw(current.squares);  \r\n      \r\n      const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n          'Go to move #' + move :\r\n          'RESTART';\r\n        return (\r\n          <li key={move}>\r\n            <button className=\"button-history\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      let status;\r\n      if (winner) {\r\n        status = 'Winner: ' + winner;\r\n      } else if (draw) {\r\n        status = 'Draw';\r\n      } else {\r\n        status = 'Next player: '+ (this.state.xIsNext? 'X':'O');\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div id=\"status\">{status}</div>\r\n            <ol id=\"history-moves\">{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) { \r\n          document.getElementById(\"square-\"+ a).style.background = \"ivory\";\r\n          document.getElementById(\"square-\"+ a).style.color = \"rgba(120, 127, 127, 0.3)\";\r\n          document.getElementById(\"square-\"+ b).style.background = \"ivory\";\r\n          document.getElementById(\"square-\"+ b).style.color = \"rgba(120, 127, 127, 0.3)\";\r\n          document.getElementById(\"square-\"+ c).style.background = \"ivory\";\r\n          document.getElementById(\"square-\"+ c).style.color = \"rgba(120, 127, 127, 0.3)\";\r\n          return squares[a];}\r\n      else {\r\n        if(document.getElementById(\"square-\"+ a))\r\n        {document.getElementById(\"square-\"+ a).style.background = \"rgba(241, 241, 241, 0.555)\";\r\n         document.getElementById(\"square-\"+ b).style.background = \"rgba(241, 241, 241, 0.555)\";\r\n         document.getElementById(\"square-\"+ c).style.background = \"rgba(241, 241, 241, 0.555)\";\r\n         document.getElementById(\"square-\"+ a).style.color = \"ivory\";\r\n         document.getElementById(\"square-\"+ b).style.color = \"ivory\";\r\n         document.getElementById(\"square-\"+ c).style.color = \"ivory\";}\r\n       }    \r\n    }\r\n    return null;\r\n  }\r\n\r\n  function checkDraw(squares) {\r\n    for (let i=0;i<squares.length;++i) {\r\n      if (squares[i]==null)\r\n       return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}